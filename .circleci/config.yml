aws_cli_setup: &aws_cli_setup
  role-arn: $AWS_ROLE_ARN

base_job: &base_job
  executor:
    name: android/android-machine
    resource-class: xlarge
    tag: 2024.07.1 #https://circleci.com/developer/images/image/cimg/android
  working_directory: "~/project"
  environment:
    TERM: dumb
    ADB_INSTALL_TIMEOUT: 8
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx4096m -XX:+HeapDumpOnOutOfMemoryError"'

version: 2.1
orbs:
  android: circleci/android@2.5.0
  aws-cli: circleci/aws-cli@3.1
  codecov: codecov/codecov@3.2.4
jobs:
  build:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - run: make bootstrap-circle
      - run:
          name: Install dependencies
          command: ./gradlew dependencies
      - save_cache:
          key: v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
          paths:
            - ~/.gradle
            - ~/.android
      - run:
          name: Assemble Release
          command: ./gradlew assembleExternalRelease -Dorg.gradle.java.home=/usr/lib/jvm/java-17-openjdk-amd64
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./

  test:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - run:
         name: Check Style
         command: ./gradlew checkstyle
      - run:
         name: KTLint
         command: ./gradlew ktlint

      - run:
          name: Lint External Release
          command: ./gradlew lintExternalRelease -Dorg.gradle.java.home=/usr/lib/jvm/java-17-openjdk-amd64
      - run:
          name: Jacoco External Debug Report
          command: ./gradlew jacocoExternalDebugReport cleanTest -PdisablePreDex -Dorg.gradle.java.home=/usr/lib/jvm/java-17-openjdk-amd64
          no_output_timeout: 30m
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs
          destination: tests
      - codecov/upload:
          file: app/build/reports/jacoco/jacocoExternalDebugReport/jacocoExternalDebugReport.xml
          token: CODECOV_TOKEN
          
  snapshot-test:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - android/create-avd:
          avd-name: Emulator
          system-image: system-images;android-30;google_apis;x86
          install: true
      - run:
          name: Configure screen size and dpi for Screenshot test
          command: ./script/emulator/configure_dpi.sh
      - android/start-emulator:
          avd-name: Emulator
          additional-args: -skin 1080x2220
          post-emulator-launch-assemble-command: ""
          run-logcat: true
          no-window: true
          restore-gradle-cache-prefix: v1a
      - android/wait-for-emulator
      - run:
          name: Config Emulator for Screenshot test
          command: ./script/emulator/screenshot_config_emulator.sh
      # Temporary JDK 17 workaround https://github.com/pedrovgs/Shot/issues/268 until https://github.com/pedrovgs/Shot/pull/292 is merged
      - run:
          name: Internal Debug Execute Screenshot Tests
          command: ./gradlew internalDebugExecuteScreenshotTests -Dorg.gradle.jvmargs="--add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.nio.channels=ALL-UNNAMED --add-exports java.base/sun.nio.ch=ALL-UNNAMED" -Dorg.gradle.java.home=/usr/lib/jvm/java-17-openjdk-amd64
      - android/save-gradle-cache:
          cache-prefix: v1a
      - store_artifacts:
          path: app/build/reports/shot/internal/debug/verification/
          destination: reports

  create_internal:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - run:
          name: push to internal branch
          command: make internal

  create_release:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - run:
          name: push to release branch
          command: make release

  create_regression:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - attach_workspace:
          at: ~/project
      - run:
          name: push to regression branch
          command: make regression

  internal:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - restore_cache:
          keys:
            - v1-bundler-{{ checksum "Gemfile.lock" }}
            - v1-bundler-
      - run:
          name: Bundle install
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: v1-bundler-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - attach_workspace:
          at: ~/project
      - run:
          name: Install Firebase CLI
          command: curl -sL https://firebase.tools | bash
      - aws-cli/setup:
          <<: *aws_cli_setup
      - run:
          name: Deploy Internal to Crashlytics and S3
          command: bundle exec fastlane internal

  regression:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - restore_cache:
          keys:
            - v1-bundler-{{ checksum "Gemfile.lock" }}
            - v1-bundler-
      - run:
          name: Bundle install
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: v1-bundler-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - attach_workspace:
          at: ~/project
      - run:
          name: Install Firebase CLI
          command: curl -sL https://firebase.tools | bash
      - run:
          name: Deploy Internal to Crashlytics and S3
          command: bundle exec fastlane internal

  release:
    <<: *base_job
    steps:
      - checkout
      - restore_cache:
          keys:
            - v5-android-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v5-android-
      - restore_cache:
          keys:
            - v1-bundler-{{ checksum "Gemfile.lock" }}
            - v1-bundler-
      - run:
          name: Bundle install
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: v1-bundler-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - attach_workspace:
          at: ~/project
      - run:
          name: Install Firebase CLI
          command: curl -sL https://firebase.tools | bash
      - run:
          name: Deploy Internal to Crashlytics and S3
          command: bundle exec fastlane external

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - snapshot-test:
          requires:
            - build
      - create_internal:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
      - create_release:
          requires:
            - build
            - test
          filters:
            branches:
              only: /release-.*/
      - create_regression:
          requires:
            - build
            - test
          filters:
            branches:
              only: /regression-.*/
      - internal:
          context: aws
          requires:
            - build
            - test
          filters:
            branches:
              only: internal

  regression:
    jobs:
      - build:
          filters:
            branches:
              only: regression
      - regression:
          requires:
            - build
          filters:
            branches:
              only: regression

  release:
    jobs:
      - build:
          filters:
            branches:
              only: external
      - test:
          requires:
            - build
      - release:
          requires:
            - build
            - test
          filters:
            branches:
              only: external

experimental:
  notify:
    branches:
      only:
        - master
        - internal
